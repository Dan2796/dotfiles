if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
      \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

" Spelling
set spellfile=~/.vim/spell/en.utf-8.add

" Shortcut for buffer switching
nmap <Tab> :b#<CR>
nmap <S-Tab> :bn<CR>
let g:netrw_altfile = 1

" Trying to make it use true colours
if (has("termguicolors"))
  set termguicolors
endif

set nocompatible
filetype on

" Remap
inoremap jk <Esc>
autocmd Filetype tex, nmap <Space>c  : w <enter> : !xelatex % <enter>
autocmd Filetype markdown, nmap <Space>c  : w <enter> : !pandoc --pdf-engine=xelatex % -o %:r.pdf <enter>
autocmd Filetype python, nmap <Space>c : w <enter> : !python3 %<CR>

": w <enter> : !xelatex % <enter>

"nnoremap <F5> <Esc>:w<CR>:!python3 %<CR>

" Relative line jump global for counts
nnoremap <expr> k (v:count == 0 ? 'gk' : 'k')
nnoremap <expr> j (v:count == 0 ? 'gj' : 'j')

" Switch off the auto-indenting
set nocindent
set nosmartindent
set noautoindent

filetype plugin on

" Tabbing set to 2 spaces
set shiftwidth=2
set tabstop=2
set expandtab

" Softwrap
set wrap
set linebreak
set tw=0 " Remove default softwrap at 80 lines
set showbreak=+++ " wrap broken-line prefix

set showmatch " highlight matching brace
set colorcolumn=80 " red bar for 80 characters
set hlsearch " highlight all search results
set smartcase " enable smart-case search
set ignorecase " always case-insensitive
set ignorecase " always case-insensitive
set incsearch " searches for strings incrementally

set nu rnu 

" Save marks between files
set viminfo='100,f1

" Fold method
autocmd Filetype r set foldmethod=marker  
autocmd Filetype rmd set foldmethod=marker  
"set foldmethod=marker
set foldmethod=syntax

" Map localleader to comma
let maplocalleader = ','

" Advanced
set ruler " Show info. at bottom

set undolevels=1000

call plug#begin('~/.vim/plugged')
  " comment out lines in .gitconfig to allow http cloning when updating

  Plug 'scrooloose/nerdtree' " NERDTree
  "Plug 'spolu/dwm.vi' " For dwm windows in vim!
  Plug 'Yggdroot/indentLine' " For indentation lines
  Plug 'tpope/vim-surround' " For tagging
  Plug 'tpope/vim-fugitive' " Git inside vim
  Plug 'junegunn/goyo.vim' " Goyo
  Plug 'junegunn/limelight.vim' " Focussed writing - need colour sourt
  Plug 'vim-airline/vim-airline' " Vim airline for pretty bar thing
  Plug 'jalvesaq/Nvim-R' " Nvim R
  Plug 'jalvesaq/vimcmdline' " Nvim-R for Python
  Plug 'vim-pandoc/vim-pandoc-syntax' " Markdown syntax
  Plug 'vim-pandoc/vim-rmarkdown' " Other markdown stuff
  Plug 'morhetz/gruvbox' " Gruv-box theme
  Plug 'arcticicestudio/nord-vim' " Nord theme
  Plug 'jnurmine/Zenburn' " Zen theme
  Plug 'lervag/vimtex' " For tex stuff e.g. autocite hopefully
  Plug 'maverickg/stan.vim' " For Stan syntax highlighting
  Plug 'chrisbra/csv.vim' " For CSV viewing
  "Plug 'vim-latex/vim-latex' " For full vimtex
  Plug 'mattn/emmet-vim' " Autocomplete in html 
  Plug 'junegunn/fzf.vim' " Fuzzy finder vim plugin
  "Plug 'ervandew/supertab' " Tab completion
  Plug 'gaalcaras/ncm-R' " Completion in R
  Plug 'ervandew/supertab' " Tab completion
  Plug 'freitass/todo.txt-vim' " Todo syntax and keybindings
  Plug 'pangloss/vim-javascript' " Javascript syntax
  Plug 'mattn/emmet-vim' " Emmet
  Plug 'w0rp/ale' " Javscript lint
  Plug 'AndrewRadev/tagalong.vim' " Change other tag

call plug#end()

let g:pandoc#modules#disabled = ["keyboard"] " disabling j map from vim-pandoc

" Sorting colour for goyo quit
autocmd! User GoyoLeave nested set t_Co=256 | colorscheme nord | :hi Normal guibg=NONE ctermbg=NONE
" Relative numbers for Goyo
" keybinding for Goyo
"nnoremap <Leader>gy :Goyo<CR> 
nnoremap gy :Goyo<CR> 
autocmd! User GoyoEnter nested Goyo 80 
autocmd! User GoyoEnter nested set nu rnu
" keybinding for Goyo

" Color scheme set as nord from plugin
set t_Co=256
syntax on
colorscheme nord
set bg=dark
" And make transparent
:hi Normal guibg=NONE ctermbg=NONE
"colorscheme gruvbox
"set bg=light

" Or for sunny days:
"set background=light
"colorscheme gruvbox

            
" Spelling / conceal in latex and md
autocmd Filetype tex,latex set spell spelllang=en_gb
let g:indentLine_setConceal = 0
autocmd Filetype markdown set spell spelllang=en_gb
autocmd Filetype text set spell spelllang=en_gb

" Get rid of tex <++> thingy
let g:Imap_UsePlaceHolders = 0

" Flavour for tex plugin
let g:tex_flavor = 'latex'

" Let vimtex fold
let g:vimtex_fold_enabled = 1

" Run R in tmux
" let R_external_term = 1
" Open R on left side, not currently working -.- :
let R_objbr_place = 'LEFT'
" Turn of the underscore change in R
let R_assign = 0
" Rely on own syntax highlighting in R
let R_hl_term = 0

" Tags file for R
set tags+=rtags
set tags+=../rtags " for tags stored one level higher
set tags+=../../rtags " for tags stored two levels higher
set tags+=.rtags
set tags+=../.rtags " for tags stored one level higher
set tags+=../../.rtags " for tags stored two levels higher
" from https://tinyheero.github.io/2017/05/13/r-vim-ctags.html
let g:tagbar_type_r = {
    \ 'ctagstype' : 'r',
    \ 'kinds'     : [
        \ 'f:Functions',
        \ 'g:GlobalVariables',
        \ 'v:FunctionVariables',
    \ ]
\ }

" Trying to get R fixed width
let R_rconsole_width = 130
let R_min_editor_width = 80
let nosplitright = 1 " not working currently

" Buffer Settings:
" Airline buffer show
let g:airline#extensions#tabline#enabled = 1
" Allow hidden buffers
set hidden
" Tab for buffer wildcards
set wildchar=<Tab> wildmenu wildmode=full

" Calcurse md syntax from Luke Smith
autocmd BufRead,BufNewFile /tmp/calcurse* set filetype=markdown
autocmd BufRead,BufNewFile ~/tmp/.calcurse/notes* set filetype=markdown

" netrw settings
let g:netrw_liststyle = 3
let g:netrw_banner = 0
let g:netrw_bufsettings = 'noma nomod nu nobl nowrap ro' 
" hide dotfiles
let ghregex='\(^\|\s\s\)\zs\.\S\+'
let g:netrw_list_hide=ghregex
"au BufWinEnter * set number
nmap #ee :Explore<CR> 
nmap #ts :Texplore<CR> 
nmap #vs :Vexplore<CR> 
nmap #ss :Sexplore<CR> 

" Personal dictionary for tag files
autocmd BufRead ~/nota/collecta/*/tags.txt !tag_collect.sh
autocmd BufRead */tags.txt set complete=k~/nota/altera/dynamic_meta/tag_list.txt

" Personal dictionary for bes names in R
autocmd Filetype r set complete=k~/functions_for_R/besip_names.txt

" Stop folding on bibs
autocmd Filetype bib, set nofoldenable 

" Fuzzy finder settings
"command! -bang ProjectFiles call fzf#vim#files('~/projects/eu_identities/', <bang>0)
"command! -bang ProjectFiles call fzf#vim#files('~/projects/covid_handling_experiment/', <bang>0)
"command! -bang ProjectFiles call fzf#vim#files('~/projects/full_lost_support/', <bang>0)
"command! -bang ProjectFiles call fzf#vim#files('~/projects/brexit_campaign/', <bang>0)
"command! -bang ProjectFiles call fzf#vim#files('~/projects/polling_ge19/', <bang>0)
"command! -bang ProjectFiles call fzf#vim#files('~/projects/china_pcv/', <bang>0)
"command! -bang ProjectFiles call fzf#vim#files('~/projects/chapter_bes_book/', <bang>0)
command! -bang ProjectFiles call fzf#vim#files('~/projects/benchmark/', <bang>0)
command! -bang AF call fzf#vim#files('~/projects/', <bang>0)
"nnoremap <C-p> :FZF<CR>
" Currently a hack - need to find out how to fzf with tmux main folder 
nnoremap <C-p> :ProjectFiles<CR>
let g:fzf_action = {
  \ 'ctrl-t': 'tab split',
  \ 'ctrl-i': 'split',
  \ 'ctrl-v': 'vsplit' }

" Add format option 'w' to add trailing white space, indicating that paragraph
" continues on next line. This is to be used with mutt's 'text_flowed' option.
" (For mutt)
" not yet working
"augroup mail_trailing_whitespace " {
    "autocmd!
    "autocmd FileType mail setlocal formatoptions+=w
"augroup END " }

" Show ale linter messages in airline
let g:airline#extensions#ale#enabled = 1
" Only run linters when file saved
let g:ale_lint_on_text_changed = 'never'
let g:ale_lint_on_insert_leave = 0
let g:ale_virtualtext_cursor = 'disabled'
let g:ale_set_highlights = 0
" Only use linters for javascript:
let g:ale_linters = {
\   'javascript': ['eslint'],
\}
let g:ale_linters_explicit = 1

" Emmet trigger key
let g:user_emmet_leader_key='<C-L>'
